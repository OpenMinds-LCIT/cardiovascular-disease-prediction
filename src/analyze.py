# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19H1vM_EES6oP9ObZrp7U31GdFF9-nmYW
"""

import pandas as pd
import matplotlib.pyplot as plt


def analyze_data(data_file):
    """
    Analyze the given data file and plot some histograms.
    """

    # Load the data into a Pandas DataFrame
    df = pd.read_csv('merged_train_data.csv')
    # Calculate some statistics about the 'gender' column
    print("Mean of gender:", df['gender'].mean())
    print("Median of gender:", df['gender'].median())
    print("Standard deviation of gender:", df['gender'].std())
    print("Value counts of gender:\n", df['gender'].value_counts())

    # Plot a histogram of the 'gender' column
    df['gender'].plot(kind='hist', grid=False, edgecolor='black', color='red')
    plt.title('Gender')
    plt.show()

    # Calculate some statistics about the 'bp_high' column
    print("\nMean of bp_high:", df['bp_high'].mean())
    print("Median of bp_high:", df['bp_high'].median())
    print("Standard deviation of bp_high:", df['bp_high'].std())
    print("Value counts of bp_high:\n", df['bp_high'].value_counts())

    # Plot a histogram of the 'bp_high' column
    df['bp_high'].plot(kind='hist', grid=False,
                       edgecolor='black', color='darkblue')
    plt.title('Blood Pressure (High)')
    plt.show()

    # Print some statistics about the 'bp_lo' column
    print("\nStatistics of bp_lo:\n", df['bp_lo'].describe())

    # Plot histograms of the other columns
    df.hist(column='bp_lo', grid=False, edgecolor='black', color='purple')
    df.hist(column='cholesterol_1', grid=False,
            edgecolor='black', color='blue')
    df.hist(column='cholesterol_2', grid=False,
            edgecolor='blue', color='black')
    df.hist(column='cholesterol_3', grid=False, edgecolor='black', color='red')
    df.hist(column='gluc_1', grid=False, edgecolor='black', color='blue')
    df.hist(column='gluc_2', grid=False, edgecolor='black', color='blue')
    df.hist(column='gluc_3', grid=False, edgecolor='black', color='blue')
    df.hist(column='diabetic_1', grid=False, edgecolor='black', color='red')
    df.hist(column='diabetic_2', grid=False, edgecolor='black', color='red')
    df.hist(column='diabetic_3', grid=False, edgecolor='black', color='red')

    plt.show()


def analyze_correlation(data):

    # Call the function with the filename
    analyze_data('merged_train_data.csv')


def analyze_correlation():
    """
    Analyze the correlation between the 'weight', 'cholesterol', and 'cardio' columns of the given data.
    """
    # Load the data into a Pandas DataFrame
    df = pd.read_csv('merged_train_data.csv')
    # Extract the 'weight', 'cholesterol', and 'cardio' columns
    selected_columns = df[['weight', 'cholesterol', 'cardio']]

    # Display the correlation matrix
    correlation_matrix = selected_columns.corr()
    print("Correlation Matrix:\n", correlation_matrix)
    # Plot a heatmap to visualize the correlation
    plt.imshow(correlation_matrix, cmap='coolwarm', interpolation='none')
    plt.colorbar()
    plt.xticks(range(len(correlation_matrix.columns)),
               correlation_matrix.columns, rotation=45)
    plt.yticks(range(len(correlation_matrix.columns)),
               correlation_matrix.columns)
    plt.title('Correlation Heatmap: Cholesterol, Weight, and Cardio')
    plt.show()


analyze_correlation()
